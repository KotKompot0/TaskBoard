definitions:
  models.TokenModel:
    properties:
      token:
        type: string
    type: object
  models.TokensModel:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    required:
    - email
    - username
    type: object
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: send username, password get tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokensModel'
      summary: Login
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: save User object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenModel'
      summary: Refresh tokens
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: save User object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Registration
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserResponse'
            type: array
      summary: Get list users
      tags:
      - User
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      summary: Create new user
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: send id delete user
      parameters:
      - description: id user
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: send id get user
      parameters:
      - description: id user
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      summary: get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: send id update user
      parameters:
      - description: id user
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      summary: update user
      tags:
      - User
swagger: "2.0"
